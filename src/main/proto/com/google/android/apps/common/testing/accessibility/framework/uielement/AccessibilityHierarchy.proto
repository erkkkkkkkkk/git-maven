/*
 * Copyright (C) 2015 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

syntax = "proto2";

package com.google.android.apps.common.testing.accessibility.framework.uielement.proto;

import "com/google/android/apps/common/testing/accessibility/framework/uielement/AndroidFramework.proto";

option java_package = "com.google.android.apps.common.testing.accessibility.framework.uielement.proto";
option java_outer_classname = "AccessibilityHierarchyProtos";


// Wire format for an AccessibilityHierarchy
// Next index: 5
message AccessibilityHierarchyProto {
  optional DeviceStateProto device_state = 1;
  repeated WindowHierarchyElementProto windows = 2;
  optional int32 active_window_id = 3 [default = -1];
  optional ViewElementClassNamesProto view_element_class_names = 4;
}

// Wire format for an ViewElementClassNames
// Next index: 2
message ViewElementClassNamesProto {
  map<string, int32> class_name = 1;
}

// Wire format for a DeviceState
// Next index: 4
message DeviceStateProto {
  optional DisplayInfoProto default_display_info = 1;
  optional int32 sdk_version = 2;

  // An IETF BCP 47 language tag representing the locale at the time the app
  // was launched.
  optional string locale = 3;
}

// Wire format for a DisplayInfo
// Next index = 3;
message DisplayInfoProto {
  optional DisplayInfoMetricsProto metrics_without_decoration = 1;
  optional DisplayInfoMetricsProto real_metrics = 2;
}

// Wire format for a DisplayInfo.Metrics
// Next index: 8
message DisplayInfoMetricsProto {
  optional float density = 1;
  optional float scaled_density = 2;
  optional float x_dpi = 3;
  optional float y_dpi = 4;
  optional int32 density_dpi = 5;
  optional int32 height_pixels = 6;
  optional int32 width_pixels = 7;
}

// Wire format for a WindowHierarchyElement
// Next index: 12
message WindowHierarchyElementProto {
  // Bookkeeping
  optional int32 id = 1 [default = -1];
  optional int32 parent_id = 2 [default = -1];
  repeated int32 child_ids = 3;
  repeated ViewHierarchyElementProto views = 4;

  // Window properties
  optional int32 window_id = 5;
  optional int32 layer = 6;
  optional int32 type = 7;
  optional bool focused = 8;
  optional bool accessibility_focused = 9;
  optional bool active = 10;
  optional RectProto bounds_in_screen = 11;

  // Extra protos to save with each window node.
  // max is 536,870,911
  extensions 400000 to max;
}

// Wire format for a ViewHierarchyElement
// Next index: 41
message ViewHierarchyElementProto {
  // Bookkeeping
  optional int32 id = 1 [default = -1];
  optional int32 parent_id = 2 [default = -1];
  repeated int32 child_ids = 3;

  // View properties
  optional string package_name = 4;
  optional string class_name = 5;
  optional string resource_name = 6;
  optional CharSequenceProto content_description = 7;
  optional CharSequenceProto text = 8;
  optional bool important_for_accessibility = 9;
  optional bool visible_to_user = 10;
  optional bool clickable = 11;
  optional bool long_clickable = 12;
  optional bool focusable = 13;
  optional bool editable = 14;
  optional bool scrollable = 15;
  optional bool can_scroll_forward = 16;
  optional bool can_scroll_backward = 17;
  optional bool checkable = 18;
  optional bool has_touch_delegate = 19;
  optional RectProto bounds_in_screen = 20;
  optional float text_size = 21;
  optional int32 text_color = 22;
  optional int32 background_drawable_color = 23;
  optional int32 typeface_style = 24;
  optional bool enabled = 25;
  optional int64 labeled_by_id = 26;
  optional int32 nonclipped_height = 27;
  optional int32 nonclipped_width = 28;
  optional bool checked = 29;
  optional string accessibility_class_name = 30;
  optional int64 accessibility_traversal_before_id = 31;
  optional int64 accessibility_traversal_after_id = 32;

  // Integers that identify class names in ViewElementClassNamesProto
  repeated int32 superclasses = 33;
  optional int32 drawing_order = 34;
  repeated RectProto touch_delegate_bounds = 35;

  // Accessibility actions exposed by the view.
  repeated ViewHierarchyActionProto actions = 36;
  optional LayoutParamsProto layout_params = 37;
  optional CharSequenceProto hint_text = 38;
  optional int32 hint_text_color = 39;
  repeated RectProto text_character_locations = 40;

  // Extra protos to save with each view node.
  // max is 536,870,911
  extensions 400000 to max;
}

// Wire format for a ViewHierarchyAction
// Next index: 3
message ViewHierarchyActionProto {
  optional int32 action_id = 1;
  optional string action_label = 2;
}
